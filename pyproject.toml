[tool.poetry]
name = "torrentnode-net"
version = "0.1.0"
description = "Decentralized P2P network for distributed computations and storage"
authors = ["TorrentNode Team <torrentnode@example.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/yourusername/torrentnode-net"
keywords = ["p2p", "torrent", "distributed", "blockchain", "computing"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "torrentnode"}]

[tool.poetry.dependencies]
python = "^3.11"
python-libtorrent = "^2.0.0"
cryptography = "^41.0.0"
web3 = "^6.0.0"
aiofiles = "^23.0.0"
asyncio = "^3.4.3"
aiohttp = "^3.9.0"
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"
click = "^8.1.0"
rich = "^13.0.0"
structlog = "^24.0.0"
python-dotenv = "^1.0.0"
psutil = "^5.9.0"
numpy = "^1.24.0"
requests = "^2.31.0"
bencodepy = "^0.9.5"
kademlia = "^2.2.2"
fastapi = "^0.100.0"
uvicorn = "^0.23.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.0"
ruff = "^0.1.0"
black = "^23.0.0"
mypy = "^1.5.0"
pre-commit = "^3.4.0"
ipython = "^8.15.0"
jupyter = "^1.0.0"

[tool.poetry.scripts]
torrentnode = "torrentnode.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 120
fix = true
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function call in argument defaults
    "B905",  # zip() without strict
    "C901",  # too complex
    "W191",  # indentation contains tabs
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
addopts = [
    "--verbose",
    "--cov=torrentnode",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--asyncio-mode=auto",
]
asyncio_mode = "auto"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["torrentnode"]
omit = ["tests/*", "*/tests/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.black]
line-length = 120
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
''' 